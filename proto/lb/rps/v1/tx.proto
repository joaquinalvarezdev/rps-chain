syntax = "proto3";
package lb.rps.v1;

option go_package = "github.com/0xlb/rpschain/x/rps/types";

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "lb/rps/v1/rps.proto";
import "gogoproto/gogo.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateGame defines a method to create a new game
  rpc CreateGame(MsgCreateGame) returns (MsgCreateGameResponse);
  // MakeMove submit a hashed move to the specificied game
  rpc MakeMove(MsgMakeMove) returns (MsgMakeMoveResponse);
  // RevealMove submit a revealed move to the specified game
  rpc RevealMove(MsgRevealMove) returns (MsgRevealMoveResponse);
  // UpdateParams defines a method to update the module's parameters
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}
// MsgCreateGame defines the Msg/CreateGame gRPC method.
message MsgCreateGame {
  option (cosmos.msg.v1.signer) = "creator";

  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string oponent = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 rounds = 3;
}

// MsgCreateGameResponse defines the Msg/CreateGame gRPC response.
message MsgCreateGameResponse {}

// MsgMakeMove defines the Msg/MakeMove gRPC method.
message MsgMakeMove {
  option (cosmos.msg.v1.signer) = "player";

  string player = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 game_number = 2;
  string move = 3;
}

// MsgMakeMoveResponse defines the Msg/MakeMove gRPC response.
message MsgMakeMoveResponse {}

// MsgRevealMove defines the Msg/MakeMove gRPC method.
message MsgRevealMove {
  option (cosmos.msg.v1.signer) = "player";

  string player = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 game_number = 2;
  string revealed_move = 3;
  string salt = 4;
}

// MsgRevealMoveResponse defines the Msg/MakeMove gRPC response.
message MsgRevealMoveResponse {}

// MsgUpdateParams defines the Msg/UpdateParams gRPC method.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  Params params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams gRPC response.
message MsgUpdateParamsResponse {}